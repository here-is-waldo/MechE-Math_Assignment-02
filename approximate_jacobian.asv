%Implementation of finite difference approximation
%for Jacobian of multidimensional function
%INPUTS:
%fun: the mathetmatical function we want to differentiate
%x: the input value of fun that we want to compute the derivative at
%OUTPUTS:
%J: approximation of Jacobian of fun at x
function J = approximate_jacobian(fun,x)
    J = zeros(4, 4);
    e = zeros(4);
    h = 1e-6;
    for i = 1:4
        e = zeros(length(x));
        e(i) = 1;
        new_row = (fun(x + h*e) - fun(x - h*e) / (2*h));
        J(:,i) = new_row;
    end
end